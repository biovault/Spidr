# The following 4 macros are designed to support the use of user supplied
# libraries or the PREBUILT libraries for flann and HDILib from the LKEB
# artifactory.

# TODO complete for MacOS and Linux

# Include flann includes via target_include_directories to the current project
macro(set_flann_project_includes target scope)
    if(USE_ARTIFACTORY_LIBS)
        MESSAGE( STATUS "Including PREBUILT flann ${LIBRARY_INSTALL_DIR}/flann")
        target_include_directories("${target}" "${scope}" "${LIBRARY_INSTALL_DIR}/flann/include")
    else()
        MESSAGE( STATUS "Including flann...")
		if(MSVC)
            target_include_directories ("${target}" "${scope}" "${FLANN_ROOT}/include")
        endif()

        if(APPLE)
            target_include_directories ("${target}" "${scope}" "${FLANN_ROOT}/include")
        endif()

        if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
            target_include_directories ("${target}" "${scope}" "${FLANN_ROOT}/include")
        endif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    endif()
endmacro()

# Include HDILib includes via target_include_directories to the current project
macro(set_HDILib_project_includes target scope)
    if(USE_ARTIFACTORY_LIBS)
        MESSAGE( STATUS "Including PREBUILT HDILib ${HDILib_INCLUDE_DIR}")
        target_include_directories("${target}" "${scope}" "${HDILib_INCLUDE_DIR}")
    else()
        MESSAGE( STATUS "Including HDILib...")
		target_include_directories("${target}" "${scope}" "${HDILIB_ROOT}/include")
    endif()
endmacro()

# Link the flann libraries via target_link_library to the current project
macro(set_flann_project_link_libraries target)
    if(USE_ARTIFACTORY_LIBS)
        MESSAGE( STATUS "Linking PREBUILT flann libraries...")
        if(MSVC)
            target_link_libraries("${target}" debug "${LIBRARY_INSTALL_DIR}/flann/lib/Debug/flann.lib")
            target_link_libraries("${target}" optimized "${LIBRARY_INSTALL_DIR}/flann/lib/Release/flann.lib")
        endif()
    else()
		if(MSVC)
            MESSAGE( STATUS "Linking Windows flann libraries...")
            target_link_libraries("${target}" debug "${FLANN_ROOT}/lib/Debug/flann_cpp_s.lib")
            target_link_libraries("${target}" optimized "${FLANN_ROOT}/lib/Release/flann_cpp_s.lib")
        endif()

        if(APPLE)
            MESSAGE( STATUS "Linking Mac OS X libraries...")
            target_link_libraries("${target}" "${FLANN_ROOT}/lib/libflann_s.a")
        endif()
    endif()
endmacro()

# Link the HDILib libraries via target_link_library to the current project
macro(set_HDILib_project_link_libraries target)
    if(USE_ARTIFACTORY_LIBS)
        MESSAGE( STATUS "Linking PREBUILT HDILib libraries...")
        target_link_libraries("${target}" ${HDILib_LINK_LIBS})
    else()
        if(MSVC)
            MESSAGE( STATUS "Linking Windows HDILib libraries...")
            target_link_libraries("${target}" debug "${HDILIB_ROOT}/lib/Debug/hdidimensionalityreduction.lib")
            target_link_libraries("${target}" debug "${HDILIB_ROOT}/lib/Debug/hdidata.lib")
            target_link_libraries("${target}" debug "${HDILIB_ROOT}/lib/Debug/hdiutils.lib")
            target_link_libraries("${target}" optimized "${HDILIB_ROOT}/lib/Release/hdidimensionalityreduction.lib")
            target_link_libraries("${target}" optimized "${HDILIB_ROOT}/lib/Release/hdidata.lib")
            target_link_libraries("${target}" optimized "${HDILIB_ROOT}/lib/Release/hdiutils.lib")
        endif()
        if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
            MESSAGE( STATUS "Linking Linux libraries...")
            target_link_libraries("${target}" "${HDILIB_ROOT}/lib/AtSNE/Linux/libbh_t_sne_library.a")
        endif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
        if(APPLE)
            MESSAGE( STATUS "Linking Mac OS X HDILib libraries...")
            target_link_libraries("${target}" debug "${HDILIB_ROOT}/lib/Debug/libbh_t_sne_library.a")
            target_link_libraries("${target}" optimized "${HDILIB_ROOT}/lib/Release/libbh_t_sne_library.a")
        endif()
    endif()
endmacro()

# lz4 currently only with prebuilt libs - is used in flann 1.8.4 and greater.
macro(set_lz4_project_includes target scope)
    if(USE_ARTIFACTORY_LIBS)
        MESSAGE( STATUS "Including PREBUILT lz4 ${LIBRARY_INSTALL_DIR}/lz4...")
        target_include_directories("${target}" "${scope}" "${LIBRARY_INSTALL_DIR}/lz4/Release/include")
    else()
        MESSAGE( STATUS "Including lz4...")
        target_include_directories("${target}" "${scope}" "${LZ4_ROOT}/Release/include")
    endif()
endmacro()

macro(set_lz4_project_link_libraries target)
    if(USE_ARTIFACTORY_LIBS)
        MESSAGE( STATUS "Linking PREBUILT lz4 libraries...")
        if(MSVC)
            target_link_libraries("${target}" debug "${LIBRARY_INSTALL_DIR}/lz4/Debug/lib/lz4.lib")
            target_link_libraries("${target}" optimized "${LIBRARY_INSTALL_DIR}/lz4/Release/lib/lz4.lib")
        endif()
    else()
	    MESSAGE( STATUS "Linking lz4 libraries...")
        if(MSVC)
            target_link_libraries("${target}" debug "${LZ4_ROOT}/Debug/lib/lz4.lib")
            target_link_libraries("${target}" optimized "${LZ4_ROOT}/Release/lib/lz4.lib")
        endif()
    endif()
endmacro()